<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	<!-- 注解的映射器和适配器 -->
	<mvc:annotation-driven>
	</mvc:annotation-driven>
	<!-- 注解的扫描器 会扫描controller注解 会自动创建controller类的对象 根据resource会进行依赖注入(autowired) -->
	<context:component-scan base-package="com/gx/car/controller"></context:component-scan>

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置jsp路径的前缀 -->
		<property name="prefix" value="/WEB-INF/pages/" />
		<!-- 配置jsp路径的后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 权限拦截器和Session拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.gx.car.intercetor.PermissionInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 图片上传解析器 -->
	<!-- 上传文件 配置MutipartResolver解析器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为5MB -->
		<property name="maxUploadSize">
			<value>5242880</value>
		</property>
	</bean>

	<!-- 配置静态资源，不让dispatcherServlet拦截请求 -->
	<mvc:resources location="/css/**" mapping="/css/**"></mvc:resources>
	<mvc:resources location="/js/**" mapping="/js/**"></mvc:resources>
	<mvc:resources location="/images/**" mapping="/images/**"></mvc:resources>
	<mvc:resources location="/static/**" mapping="/static/**"></mvc:resources>



	<!-- advice配置(对于切点的具体操作) <bean id="logInterceptor" class="com.gx.car.Interceptor.LogInterceptor"> 
		</bean> aop配置 <aop:config proxy-target-class="true"> 配置切点，使用spring表达式，其实就是正则表达式 
		<aop:pointcut expression="execution(* com.gx.car.controller.*.*(..)) and 
		@annotation(org.springframework.web.bind.annotation.RequestMapping)" id="controllerMethodPointcut" 
		/> 配置对于切面的具体操作 <aop:advisor advice-ref="logInterceptor" pointcut-ref="controllerMethodPointcut" 
		/> </aop:config> -->
</beans>